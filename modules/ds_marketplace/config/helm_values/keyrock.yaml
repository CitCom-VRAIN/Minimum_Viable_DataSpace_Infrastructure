keyrock:
  fullnameOverride: ${service_name}
  statefulset:
    image:
    # repository: quay.io/wi_stefan/keyrock
    # tag: sn-fix
    # ref: https://hub.docker.com/r/fiware/idm
    repository: fiware/idm
    tag: 8.3.3
    pullPolicy: Always

  #* MySQL Database configuration
  db:
    host: ${mysql_service}
    user: root
    password: ${mysql_root_password}

  admin:
    user: admin
    password: ${admin_password}
    email: ${admin_email}

  ## Init script for Keyrock DB
  initScript:
    ## -- Enable init script
    initEnabled: true
    ## -- Database name for init script
    dbName: bae_idm
    
  # existingSecret: keyrock-secret

  route:
    enabled: false
  
  #* Ingress configuration (should there be an ingress to connect the activation
  #* service with the public internet)
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      # forcing everything to use ssl
      ingress.kubernetes.io/ssl-redirect: "true"
      # example annotations, allowing cert-manager to automatically create tls-certs
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: ${dns_names}
        paths:
        - /
    # configure the ingress' tls
    tls:
      - secretName: ${secret_tls_name}
        hosts:
          - ${dns_names}

  #* External hostname of Keyrock
  host: https://${dns_names}
  #* Port that the keyrock container uses
  port: 8080 # default port


  ## Theme configuration for Keyrock
  theme:
    ## -- Enable theme
    enabled: false

  ## Configuration of Authorisation Registry (AR)
  authorisationRegistry:
    # -- Enable usage of authorisation registry
    enabled: false
    # -- Identifier (EORI) of AR
    identifier: "did:web:${didweb_domain}:did"
    # -- URL of AR
    url: "internal"

  ## Configuration of iSHARE Satellite
  satellite:
    # -- Enable usage of satellite
    enabled: false
    # # -- Identifier (EORI) of satellite
    # identifier: "EU.EORI.FIWARESATELLITE"
    # # -- URL of satellite
    # url: "https://tir.dsba.fiware.dev"
    # # -- Token endpoint of satellite
    # tokenEndpoint: "https://tir.dsba.fiware.dev/token"
    # # -- Parties endpoint of satellite
    # partiesEndpoint: "https://tir.dsba.fiware.dev/parties"

  #* Configuration of local key and certificate for validation and generation of tokens
  token:
    enabled: false
  
  additionalEnvVars:
    - name: IDM_TITLE
      value: "DSBA Marketplace IDP"
    - name: IDM_DB_NAME
      value: bae_idm
    - name: IDM_DB_SEED
      value: "true"
    - name: IDM_SERVER_MAX_HEADER_SIZE
      value: "32768"
    - name: IDM_PR_CLIENT_ID
      value: "did:web:${didweb_domain}:did"
    # - name: IDM_EMAIL_HOST
    #   value: "mailgun-fiware-io.infra.svc.cluster.local"
    # - name: IDM_EMAIL_PORT
    #   value: "25"
    # - name: IDM_EMAIL_ADDRESS
    #   value: "bp-one@fiware.io"
    # - name: IDM_DEBUG
    #   value: "true"
    # - name: DEBUG
    #   value: "*"
    - name: IDM_PR_CLIENT_KEY
      valueFrom:
          secretKeyRef:
            name: ${waltid_secret_tls}
            key: tls.key
    - name: IDM_PR_CLIENT_CRT
      valueFrom:
          secretKeyRef:
            name: ${waltid_secret_tls}
            key: tls.crt

# TODO: Change values
marketplace:
  id: marketplace-id
  secret: f7e11746-b84f-4748-86e5-107146e888h7
  name: Marketplace
  description: Keyrock client for the marketplace.
  url: http://marketplace.dsba.fiware.dev
  redirectUrl: http://marketplace.dsba.fiware.dev/auth/fiware/callback
  grantType: authorization_code,refresh_token
  responseType: code
  tokenTypes: bearer