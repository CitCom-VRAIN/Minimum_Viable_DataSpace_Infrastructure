fullnameOverride: ${service_name}

statefulset:
  image:
    # repository: quay.io/wi_stefan/keyrock
    # tag: sn-fix
    # ref: https://hub.docker.com/r/fiware/idm
    repository: fiware/idm
    tag: 8.3.3
    pullPolicy: IfNotPresent

  replicaCount: 1

  revisionHistoryLimit: 3
  
  updateStrategy:
    type: RollingUpdate
    pullPolicy: IfNotPresent
  
  # additionalLabels: {}
  # additionalAnnotations: {}
  ## keyrock resource requests and limits, we leave the default empty to make that a concious choice by the user.
  ## for the autoscaling to make sense, you should configure this.
  # resources:
    # limits:
      # cpu: 100m
      # memory: 128Mi
    # requests:
      # cpu: 100m
      # memory: 128Mi
  
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## liveness and readiness probes of the keyrock broker, they will be evaluated against the version endpoint
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  
  readinessProbe:
    initialDelaySeconds: 31
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  
  startupProbe:
    initialDelaySeconds: 5
    periodSeconds: 5
    failureThreshold: 5
    timeoutSeconds: 30

#* Autoscaling configuration
autoscaling:
  enabled: false

#* MySQL Database configuration
db:
  host: ${mysql_service}
  user: root
  password: ${mysql_root_password}

#* Admin keyrock user
admin:
  user: admin
  password: ${admin_password}
  email: ${admin_email}

# existingSecret: keyrock-secret

#* Openshift configuration
route:
  enabled: false

#* Ingress configuration (should there be an ingress to connect the activation
#* service with the public internet)
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # forcing everything to use ssl
    ingress.kubernetes.io/ssl-redirect: "true"
    # example annotations, allowing cert-manager to automatically create tls-certs
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: ${dns_names}
      paths:
      - /
  # configure the ingress' tls
  tls:
    - secretName: ${secret_tls_name}
      hosts:
        - ${dns_names}

#* External hostname of Keyrock
host: https://${dns_names}
#* Port that the keyrock container uses
port: 8080 # default port

#* Configuration of Authorisation Registry (AR)
authorisationRegistry: 
  enabled: false
  # -- Identifier (EORI) of AR
  identifier: "did:web:${didweb_domain}:did"
  # -- URL of AR
  url: "internal"

#* Configuration of iSHARE Satellite
satellite: 
  enabled: false
  # # -- Identifier (EORI) of satellite
  # identifier: "EU.EORI.FIWARESATELLITE"
  # # -- URL of satellite
  # url: "https://tir.dsba.fiware.dev"
  # # -- Token endpoint of satellite
  # tokenEndpoint: "https://tir.dsba.fiware.dev/token"
  # # -- Parties endpoint of satellite
  # partiesEndpoint: "https://tir.dsba.fiware.dev/parties"
#* Configuration of local key and certificate for validation and generation of tokens
token:
  enabled: false

#* A list of additional env vars to be set, check the keyrock docu for all available options
#* ref: https://fiware-idm.readthedocs.io/en/latest/installation_and_administration_guide/environment_variables/index.html
additionalEnvVars:
  - name: IDM_TITLE
    value: "dsba AR"
  - name: IDM_DB_NAME
    value: ar_idm
  - name: IDM_DB_SEED
    value: "true"
  - name: IDM_SERVER_MAX_HEADER_SIZE
    value: "32768"
  - name: IDM_PR_CLIENT_KEY
    valueFrom:
      secretKeyRef:
        name: ${waltid_secret_tls}
        key: tls.key
  - name: IDM_PR_CLIENT_CRT
    valueFrom:
        secretKeyRef:
            name: ${waltid_secret_tls}
            key: tls.crt
#   - name: IDM_DEBUG
#     value: "true"
#   - name: DEBUG
#     value: "*"
  - name: IDM_PR_CLIENT_ID
    value: "did:web:${didweb_domain}:did"
