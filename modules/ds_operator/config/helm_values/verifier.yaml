fullnameOverride: ${service_name}

# Ingress configuration
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # forcing everything to use ssl
    ingress.kubernetes.io/ssl-redirect: "true"
    # example annotations, allowing cert-manager to automatically create tls-certs
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: ${service_domain}
      paths:
      - /
  # configure the ingress' tls
  tls:
    - secretName: ${secret_tls_name}
      hosts:
        - ${service_domain}

deployment:
  image:
    repository: quay.io/fiware/vcverifier
    tag: 4.0.1
    pullPolicy: Always
  
  logging: 
    level: DEBUG
    pathsToSkip: 
      - "/health"
  
  server:
    host: https://${service_domain}
  
  ssikit:
    auditorUrl: http://${waltid_service}:7003
  
  verifier:
    tirAddress: https://${tir_service}/v3/issuers #TODO: Check is TIR or TPR??
    did: ${did_domain}
  
  m2m: #! What is this??
    authEnabled: true
    keyPath: /opt/did/secret/tls.key
    credentialPath: /opt/credential/credential.json
    clientId: tir-res
    verificationMethod: ${did_domain}
  
  configRepo:
    configEndpoint: http://${ccs_service}:8080/
  
  # # TODO: Error deployment
  # # kubectl logs verifier-66f66844fb-dfz6v --context kind-ds-local-cluster --kubeconfig ~/.kube/config_DSLocal -n ds-operator
  # # Defaulted container "vcverifier" out of: vcverifier, load-did (init)
  # # ---
  # initContainers: #! What is this??
  #   - name: load-did
  #     image: quay.io/opencloudio/curl:4.2.0-build.8
  #     imagePullPolicy: Always
  #     command: 
  #       - /bin/sh
  #       - /opt/did/script/import.sh
  #     env:
  #       - name: WALTID_CORE_ADDRESS
  #         value: "${waltid_service}:7000"
  #     volumeMounts:
  #       - name: operator-did-config
  #         mountPath: /opt/did/script
  #       - name: did-secret
  #         mountPath: /opt/did/secret
  # additionalVolumeMounts:
  #   - name: operator-verifier-credential
  #     mountPath: /opt/credential
  #   - name: did-secret
  #     mountPath: /opt/did/secret
  # additionalVolumes:
  #   - name: operator-did-config
  #     configMap:
  #       name: "${service_name}-did-config"
  #   - name: operator-verifier-credential
  #     configMap:
  #       name: "${service_name}-vcredential-config" #TODO: Change to variable
  #   - name: did-secret
  #     secret: #! Is this the tls certificate of the domain name?
  #       secretName:  ${secret_tls_name}
