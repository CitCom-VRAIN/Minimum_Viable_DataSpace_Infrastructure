fullnameOverride: ${service_name}

deployment:
  image:
    repository: quay.io/i4trust/pdc-portal
    tag: 2.9.0
    pullPolicy: Always
  livenessProbe:
    initialDelaySeconds: 4
  readinessProbe:
    initialDelaySeconds: 5

route:
  enabled: false

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # forcing everything to use ssl
    ingress.kubernetes.io/ssl-redirect: "true"
    # example annotations, allowing cert-manager to automatically create tls-certs
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: ${ds_domain}
      paths:
      - /
  # configure the ingress' tls
  tls:
    - secretName: ${secret_tls_name}
      hosts:
        - ${ds_domain}

debug:
  enabled: true

ccs:
  endpoint: "${css_service}:8080/"
  id: ${client_id}
  credentials:
    - type: "VerifiableCredential"
      trustedParticipantsLists: [
        "https://${ds_domain_tpr}"
      ]
      trustedIssuersLists: [ 
        "http://${til_service}:8080"
      ]

config:
  title: "OnBoarding Portal"
  getLabel: "Get Participants"
  inputLabel: "Participant"

  external:
    host: ${ds_domain}

  oidc:
    redirect_path: "/openid_connect1.0/return"
    acr: "urn:http://eidas.europa.eu/LoA/NotNotified/high"

  cb:
    endpoint: "https://${ds_domain_kong}/vc/ngsi-ld/v1"
    endpoint_siop: "https://${ds_domain_kong}/vc/ngsi-ld/v1"
  
  express:
    port: 7000

      
  # Configuration for SIOP flow
  siop:
    # SIOP flow enabled
    enabled: true
    # Base uri of the verifier
    verifier_uri: https://${ds_domain_verifier}
    # DID of verifier
    did: "did:web:${didweb_domain}:did"
    # Client ID to be used
    client_id: ${client_id}
    # Show separate Login button which shows the JWT access token only after login
    jwtOnlyEnabled: true

  idp: []
